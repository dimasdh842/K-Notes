{"version":3,"sources":["config/firebase/index.js","containers/pages/Dashboard/index.js","config/redux/action/index.js","components/atoms/Button/index.js","containers/pages/Login/index.js","containers/pages/Register/index.js","config/redux/reducer/index.js","config/redux/store/index.js","containers/pages/App/index.js","reportWebVitals.js","index.js"],"names":["require","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Dashboard","state","title","content","isActive","user","notes","editStatus","handleSubmitedNote","data","date","Date","getTime","userId","uid","props","addDataToAPI","setState","console","log","handleChangeText","e","target","id","value","handleUpdateChange","handleInputForm","handleUpdateNote","note","noteId","body","updateDataAPI","then","result","catch","err","handleDeleteNote","deleteDataAPI","userLocalStorage","JSON","parse","localStorage","getItem","this","getDataAPI","res","className","email","type","placeholder","onClick","onChange","toLocaleTimeString","length","map","handleUpdatebar","defaultValue","Component","connect","dispatch","database","ref","push","urlNotes","Promise","resolve","on","snapshoot","dataArray","Object","keys","val","key","reject","set","remove","Button","disabled","Login","password","name","handleLoginSubmit","preventDefault","loginAPI","setItem","stringify","handleClearForm","history","isLoading","setIsloading","auth","signInWithEmailAndPassword","error","errorCode","code","errorMessage","message","loginUserAPI","setUser","Register","handleRegisterSubmit","registerAPI","createUserWithEmailAndPassword","registerUserAPI","initialState","popup","isLogin","reducer","action","store","createStore","applyMiddleware","thunk","App","rel","href","integrity","crossOrigin","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33064b49.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/database\";\r\nrequire(\"firebase/auth\");\r\n\r\n// Your web app's Firebase configuration\r\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBGl7KNYKd1D2DRU5wlEa5-PIBZNjGL-fI\",\r\n    authDomain: \"doing-nothing-firebase.firebaseapp.com\",\r\n    projectId: \"doing-nothing-firebase\",\r\n    storageBucket: \"doing-nothing-firebase.appspot.com\",\r\n    messagingSenderId: \"54813910745\",\r\n    appId: \"1:54813910745:web:20e5d922ad75133ba240c8\",\r\n    measurementId: \"G-LRPZ39MSNL\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics(); \r\n\r\n  export default firebase","import React, {Component,Fragment} from 'react'\r\nimport { addDataToAPI, deleteDataAPI, getDataAPI,updateDataAPI } from \"../../../config/redux/action\"\r\nimport {connect} from 'react-redux'\r\nimport './Dashboard.css'\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        isActive: false,\r\n        user: {},\r\n        notes: [],\r\n        editStatus: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        // this.setState({\r\n        //     user: ,\r\n        // })\r\n\r\n        const userLocalStorage = JSON.parse(localStorage.getItem('user'))\r\n        this.state.user = userLocalStorage\r\n        console.log('localstorage',userLocalStorage)\r\n        console.log(this.state.user)\r\n        this.props.getDataAPI(this.state.user.uid).then(res => {\r\n            this.setState({\r\n                notes:res\r\n            })\r\n            console.log(this.props.notes);\r\n            this.setState({\r\n                title:'',\r\n                content:''\r\n            })\r\n        })\r\n    }\r\n    \r\n    handleSubmitedNote = () => {\r\n        const data = {\r\n            title : this.state.title,\r\n            content: this.state.content,\r\n            date: new Date().getTime(),\r\n            userId: this.state.user.uid\r\n        }\r\n\r\n        \r\n        this.props.addDataToAPI(data)\r\n        this.setState({\r\n            title:'',\r\n            content:''\r\n        })\r\n        console.log(this.state)\r\n        // this.props.getDataAPI(this.state.user.uid).then(res => {\r\n        //     this.setState({\r\n        //         notes:res\r\n        //     })\r\n        // })\r\n    }\r\n\r\n    handleChangeText = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    \r\n    handleUpdateChange = (e) => {\r\n        \r\n    }\r\n\r\n    handleInputForm = () => {\r\n        if (this.state.isActive) {\r\n            this.setState({\r\n                isActive: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isActive: true\r\n            })\r\n        }\r\n\r\n        console.log(this.state);\r\n    }\r\n\r\n    handleUpdateNote = (note) => {\r\n\r\n        if (this.state.title === '') {\r\n            // this.setState({\r\n            //     title: note.data.title\r\n            // })\r\n\r\n            this.state.title = note.data.title \r\n        }\r\n        \r\n        if (this.state.content === '') {\r\n            // this.setState({\r\n            //     content:note.data.content,\r\n            // })\r\n            \r\n            this.state.content = note.data.content \r\n        }\r\n\r\n        const data = {\r\n            userId: this.state.user.uid,\r\n            noteId: note.id,\r\n            body: {\r\n                date: new Date().getTime(),\r\n                content:this.state.content,\r\n                title: this.state.title\r\n            }\r\n        }\r\n\r\n        console.log(data)\r\n\r\n        this.props.updateDataAPI(data).then(result => {\r\n            console.log(result);\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    handleDeleteNote = (note) => {  \r\n        const data = {noteId:note.id,userId:this.state.user.uid}\r\n        this.props.deleteDataAPI(data)\r\n    } \r\n\r\n    render() {    \r\n        return (\r\n            <div className=\"dashboard-container\">\r\n                <div className=\"dashboard-header\">\r\n                    <h2>hello {this.state.user.email}</h2>\r\n                    <p>Type something matter today and let me to keep it for you</p>\r\n                    <div className=\"header-notes\">\r\n                        <input className=\"search\" type=\"text\" placeholder=\"search your notes\"/>\r\n                        <button className=\"new-note-btn\" onClick={this.handleInputForm}><i className=\"fas fa-pencil-alt\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"all-notes\">\r\n                {\r\n                        this.state.isActive ? (\r\n\r\n                    <div className=\"add-new-note-form\">\r\n                        <input id=\"title\" className=\"title-note\" placeholder=\"title\" type=\"text\" value={this.state.title} onChange={this.handleChangeText}/>\r\n                        <textarea id=\"content\" value={this.state.content} className=\"content-note\" placeholder=\"content\" onChange={this.handleChangeText}>\r\n                        </textarea>\r\n                        <span className=\"date-note\">{new Date(new Date().getTime()).toLocaleTimeString()}</span>\r\n                        <button className=\"submit-note\" onClick={this.handleSubmitedNote}>\r\n                                <i className=\"fas fa-save\"></i>\r\n                        </button>\r\n                    </div>)\r\n                    :\r\n                    null\r\n                }    \r\n\r\n                </div>\r\n\r\n                <div className=\"all-notes\">\r\n                    <Fragment>\r\n                    {\r\n                        \r\n                        this.props.notes.length > 0 ? \r\n                        this.props.notes.map(note => {\r\n                            return (\r\n                                <div className=\"add-new-note-form\" key={note.id} onClick={this.handleUpdatebar}>\r\n                                    <input id=\"title\" className=\"title-note\" placeholder=\"title\" type=\"text\" defaultValue={note.data.title} onChange={this.handleChangeText}/>\r\n                                    <textarea id=\"content\" defaultValue={note.data.content} className=\"content-note\" placeholder=\"content\" onChange={this.handleChangeText}>\r\n                                    </textarea>\r\n\r\n                                            <div className=\"submit-note-bar\" >\r\n                                                <span className=\"date-note\">{new Date(note.data.date).toLocaleTimeString()}</span>\r\n                                                <div>\r\n                                                    <i className=\"fas fa-trash\" onClick={() => this.handleDeleteNote(note)}></i>\r\n                                                    <i className=\"fas fa-save\" onClick={() => this.handleUpdateNote(note)}></i>\r\n                                                </div>\r\n                                            </div> \r\n                                            \r\n                                </div>\r\n                                \r\n                            )   \r\n                        })\r\n                        : 'Tidak ada catatan'\r\n                    }\r\n                    </Fragment>\r\n                </div>            \r\n\r\n            \r\n                \r\n            </div>\r\n\r\n\r\n        )\r\n}\r\n}\r\n\r\nconst reduxState = (state) => ({\r\n    user: state.user,\r\n    notes: state.notes\r\n})\r\n\r\nconst reduxDispatch = (dispatch) => ({\r\n    addDataToAPI: (data) => dispatch(addDataToAPI(data)),\r\n    getDataAPI: (userId) => dispatch(getDataAPI(userId)),\r\n    updateDataAPI: (data) => dispatch(updateDataAPI(data)),\r\n    deleteDataAPI: (data) => dispatch(deleteDataAPI(data)),\r\n})\r\n\r\nexport default connect(reduxState,reduxDispatch)(Dashboard)","import firebase from '../../firebase'\r\n\r\nexport const registerUserAPI = (email,password) => (dispatch) => {\r\n    return new Promise((resolve,reject) => {\r\n        dispatch({type: 'CHANGE_ISLOADING', value: true})\r\n        firebase.auth().createUserWithEmailAndPassword(email,password)\r\n        .then(result => {\r\n            dispatch({type: 'CHANGE_ISLOADING', value: false})\r\n            resolve(result.user)\r\n        })\r\n        .catch(error => {\r\n            dispatch({type: 'CHANGE_ISLOADING', value: false})\r\n            reject(error)    \r\n        })\r\n    })\r\n}\r\n\r\nexport const loginUserAPI = (email,password) => (dispatch) => {\r\n    const promise = new Promise((resolve,reject) => {\r\n        dispatch({type: 'CHANGE_ISLOADING', value: true})\r\n        firebase.auth().signInWithEmailAndPassword(email,password)\r\n        .then(result => {\r\n            console.log(result.user);\r\n            dispatch({type: 'CHANGE_ISLOADING', value: false})\r\n            resolve(result.user)\r\n        })\r\n        .catch(error => {\r\n            let errorCode = error.code\r\n            let errorMessage = error.message\r\n            console.log(errorCode);\r\n            console.log(errorMessage);\r\n            dispatch({type: 'CHANGE_ISLOADING', value: false})\r\n            reject(error)\r\n            })\r\n    })\r\n\r\n    return promise\r\n}\r\n\r\n\r\nexport const addDataToAPI = (data) => (dispatch) => {\r\n        firebase.database().ref('notes/' + data.userId).push({\r\n            title: data.title,\r\n            content: data.content,\r\n            date: data.date\r\n        })\r\n}\r\n\r\nexport const getDataAPI = (userId) => (dispatch) => {\r\n    const urlNotes = firebase.database().ref('notes/'+ userId)\r\n    return new Promise((resolve) => {\r\n        urlNotes.on('value', (snapshoot) => {\r\n            const dataNotes = Object.keys(snapshoot.val())\r\n            let dataArray = []\r\n\r\n            dataArray = dataNotes.map(key => ({\r\n                id: key,\r\n                data: snapshoot.val()[key]\r\n            }))\r\n\r\n            dispatch({type:'SET_NOTES',value:dataArray})\r\n            resolve(dataArray)\r\n        })\r\n    })        \r\n    }\r\n\r\nexport const updateDataAPI = (data) => (dispatch) => {\r\n    console.log(data);\r\n    const urlNotes = firebase.database().ref(`notes/${data.userId}/${data.noteId}`)\r\n    return new Promise((resolve,reject) => {\r\n        urlNotes.set(data.body, (result) => { \r\n            if (result) {\r\n                reject(false)\r\n            }\r\n            else {\r\n                resolve(true)\r\n            }\r\n        })\r\n\r\n    })        \r\n    }\r\n\r\nexport const deleteDataAPI = (data) => (dispatch) => {\r\n    const urlNotes = firebase.database().ref(`notes/${data.userId}/${data.noteId}`)\r\n    return new Promise((resolve,reject) => {\r\n        urlNotes.remove()\r\n    })        \r\n    }","import './Button.css'\r\n\r\nconst Button = (props) => {\r\n    if(props.disabled){\r\n        return <button className=\"btn-disabled\" disabled>Loading...</button>\r\n    }\r\n    \r\n    return <button className=\"btn-submit\" onClick={props.onClick}>{props.title}</button>\r\n}\r\n\r\nexport default Button","import React,{Component} from \"react\";\r\nimport {connect} from 'react-redux'\r\nimport { loginUserAPI } from \"../../../config/redux/action\";\r\nimport Button from \"../../../components/atoms/Button\"; \r\nimport './Login.css'\r\n\r\nclass Login extends Component{\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        name: ''\r\n    }\r\n\r\n    handleChangeText = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })   \r\n    }\r\n\r\n    handleLoginSubmit = (e) => {\r\n        e.preventDefault()\r\n        const {email,password} = this.state\r\n        this.props.loginAPI(email,password)\r\n        .then(result => {\r\n                localStorage.setItem('user',JSON.stringify(result))\r\n                this.handleClearForm()\r\n                this.props.history.push(\"/\")        \r\n        })\r\n        .catch(err => {\r\n            console.log('login failed',err)\r\n        })\r\n    }\r\n\r\n\r\n    handleClearForm = () => {\r\n        this.setState({\r\n            email: '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-container\">\r\n                <h2>Login Form</h2>\r\n                <p>Welcome to Your online notebook it's  very usefull right? don't you think so?</p>\r\n                <div className=\"login-form\">\r\n                    <input type=\"text\" id=\"email\" placeholder=\"Email\" className=\"email\" value={this.state.email} onChange={this.handleChangeText}/> <br/>\r\n                    <input type=\"password\" id=\"password\" placeholder=\"Password\" className=\"password\" value={this.state.password} onChange={this.handleChangeText}/><br/>\r\n                    <Button onClick={this.handleLoginSubmit} disabled={this.props.isLoading} title=\"Login\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst reduxState = (state) => ({\r\n    isLoading: state.isLoading,\r\n})\r\n\r\nconst reduxDispatch = (dispatch) => ({\r\n    setIsloading: (data) => dispatch({type: 'CHANGE_ISLOADING',value: data}),\r\n    loginAPI: (email,password) => dispatch(loginUserAPI(email,password)),\r\n    setUser: (data) => dispatch({type: 'CHANGE_USER',value:data})\r\n})\r\n\r\nexport default connect(reduxState,reduxDispatch)(Login)","import React,{Component} from \"react\"\r\nimport Button from '../../../components/atoms/Button'\r\nimport {connect} from 'react-redux'\r\nimport { registerUserAPI } from \"../../../config/redux/action\"\r\nimport './Register.css'\r\n\r\nclass Register extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        name: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChangeText = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleRegisterSubmit = () => {\r\n        const {email,password} = this.state\r\n\r\n        this.props.registerAPI(email,password)\r\n        .then(result => {\r\n            localStorage.setItem('user',JSON.stringify(result))\r\n            this.props.history.push('/')\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n        \r\n        this.handleClearForm()\r\n    }\r\n\r\n    handleClearForm = () => {\r\n        this.setState({\r\n            email: '',\r\n            password: '',\r\n            name: ''\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"register-container\">\r\n                <h2>Register Form</h2>\r\n                <p>Register a new Account and enjoy the easiest way to keep your notes in the cloud</p>\r\n                <div className=\"register-form\">\r\n                    <input type=\"text\" id=\"name\" placeholder=\"name\" className=\"name\"  onChange={this.handleChangeText} value={this.props.name}/> <br/>\r\n                    <input type=\"text\" id=\"email\" placeholder=\"email\"  className=\"email\" onChange={this.handleChangeText} value={this.props.email}/> <br/>\r\n                    <input type=\"password\" id=\"password\" placeholder=\"password\" className=\"password\" onChange={this.handleChangeText} value={this.props.password}/><br/>\r\n                    <Button disabled={this.props.isLoading} onClick={this.handleRegisterSubmit} title=\"Register\"/>\r\n                </div>\r\n            </div> \r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst reduxState = (state) => ({\r\n    isLoading: state.isLoading,\r\n    email: state.email,\r\n    password: state.password,\r\n    name: state.name\r\n\r\n})\r\n\r\nconst reduxDispatch = (dispatch) => ({\r\n    setIsloading: (data) => dispatch({type: 'CHANGE_ISLOADING',value: data}),\r\n    registerAPI: (email,password) => dispatch(registerUserAPI(email,password)),\r\n    setUser: (data) => dispatch({type: 'CAHNGE_USER',value: data}) \r\n})\r\n\r\nexport default connect(reduxState,reduxDispatch)(Register)","const initialState = {\r\n    popup: false,\r\n    isLogin: false,\r\n    isLoading: false,\r\n    user: {},\r\n    notes: []\r\n  }\r\n\r\nconst reducer = (state = initialState,action) => {\r\n  if(action.type ==='CHANGE_POPUP') {\r\n    return {\r\n      ...state,\r\n      popup: action.value\r\n    }\r\n  }\r\n\r\n  if(action.type ==='CHANGE_ISLOGIN') {\r\n    return {\r\n      ...state,\r\n      isLogin: action.value\r\n    }\r\n  }\r\n  \r\n  if (action.type === 'CHANGE_USER') {\r\n    return {\r\n      ...state,\r\n      user: action.value\r\n    }\r\n  }\r\n  if(action.type ==='CHANGE_ISLOADING') {\r\n    return {\r\n      ...state,\r\n      isLoading: action.value\r\n    }\r\n  }\r\n  if(action.type ==='SET_NOTES') {\r\n    return {\r\n      ...state,\r\n      notes: action.value\r\n    }\r\n  }\r\n  return state\r\n}\r\n\r\nexport default reducer","import { createStore, applyMiddleware } from 'redux';\r\nimport reducer from '../reducer'\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const store = createStore(reducer,applyMiddleware(thunk))\r\n","import './App.css';\nimport Dashboard from '../Dashboard'\nimport Login from '../Login'\nimport Register from '../Register'\nimport {HashRouter as Router,Route} from \"react-router-dom\";\nimport {store} from '../../../config/redux'\nimport {Provider} from 'react-redux'\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.5.0/css/all.css\" integrity=\"sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU\" crossOrigin=\"anonymous\"></link>\n      <Router>\n          <Route path=\"/\" exact component={Dashboard}/>\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/register\" component={Register}/>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/pages/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}